What happens when you initialize a repository? Why do you need to do it?

It adds a hidden directory .git, which contains the data for the file history of the commits.
Before doing this git does not track any changes.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The working directory contians all the files that can be worked on, but the staging area only contains the files we choose to add to the commit.
The staging area allows us to choose which files are going to be added to a commit.

How can you use the staging area to make sure you have one commit per logical change?

If multiple files have been changed, and it would make sense to save different changes as different commits, then they can be added to the staging area one at a time, and commited separately. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Adding new experimental features, without breaking the existing code base.
Making a translated verion of a program, while keeping the normal version.

How do the diagrams help you visualize the branch structure?

The diagram allows me to trace the branch structure, and is easier to follow than a list.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The changes made in each branch are combined into one working version. The branches merge into one commit, which then becomes the master.